{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww12240\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
MySQL Numeric Types include types for \
	integer, \
	fixed point and \
	floating point real numbers. \
\
Integer types are used for storing numbers that don't have a fractional part. 		There are five integer types in MySQL and they differ only on the scale of the values that they represent. \
	 table shows the storage requirements and scale for the various integer types. Note that int, is an alias for integer so when you see int or integer they mean exactly the same thing. The SQL standard is integer, but MySQL like most database systems recognizes int as the same type.\
\
Type		storage-Bytes	MinValue					MaxValue	\
TINYINT		1			-128						127\
   UNSIGNED				0						255\
\
SMALLINT	2			0						32767\
   UNSIGNED				0						65535\
\
MEDIUMINT	3			-8388608					8388608\
   UNSIGNED				0						16777215\
\
INTEGER		4			-2147483648				2147483647\
   UNSIGNED				0						4294967295\
\
BIGINT		8			-9223372036854775808		9223372036854775807		  UNSIGNED				0					18446744073709551615\
	\
\cb1 \
\cb3 The decimal type is used for fixed precision values. \
	The type declaration for decimal takes two parameters. \
\
	DECIMAL(precision, scale)\
\
		precision - total number of digits that will be stored. \
			including the digits After the decimal point. \
		scale - position of the decimal point. \
\
			Zero means no decimal point. \
\
\
	1234567.89\
		DECIMAL(9,2)\
	\
			I.e. declaration with 9 for precision and 2 for scale, \
				there are 9 significant digits. \
			And the decimal point is in the 2nd position.\
\cb1 \
\cb3 	NUMERIC(precision, scale)\
		an alias for decimal; does Exactly the same thing. \
		NUMERIC(9,2)\
\
	\
The default values for DECIMAL precision and scale are 10 and 0, \
so DECIMAL by itself. Is the same as decimal with a 10 and a 0 for its parameters. \
\
	DECIMAL same as DECIMAL(10,0)\
	1234567890\
\
\
MySQL - two floating point types\
\
Type				Precision (bits)		Precision (digits)	Numeric Range\
FLOAT (aka REAL)		24				~7				+/- 3.4e38\
DOUBLE				53				~16				+/- 1.79e308\
 \
	FLOAT type 	\
		standard IEEE 32-bit floating point number with a range of plus or minus 3.4 to the 38th power at a precision of 24 bits or about seven digits. \
		Note: Real type same as Float\
\
	DOUBLE type\
		standard IEEE 64-bit floating point number with a range of plus or minus 1.79 to the 308th power. \
		At a precision of 53 bits or about 16 digits. \
\
Floating point numbers are capable of representing very large or very small values, 			but in order to do so in a reasonable amount of space, \
		they sacrifice precision.\
 It's important to understand these limitations as they can have significant effect on calculations.\
\
}